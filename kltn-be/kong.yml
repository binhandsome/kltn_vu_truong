_format_version: "3.0"
_transform: true

# ==== Consumer + secret cho JWT (HS512) ====
consumers:
  - username: user-auth-issuer
    custom_id: user-auth-issuer
    jwt_secrets:
      - key: user-service
        secret: "aGtHd1hnM3NlcEh5U3lmaDhoUWVrZ0dZN0RZbGZxVXpKbFlGbFZKZ2JPRzFqcmMybWhVZFN5N0RoT0JreEdhVg=="
        algorithm: HS512
plugins:
  - name: cors
    config:
      origins:
        - http://localhost:3000
      methods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
      headers:
        - Authorization 
        - Content-Type
        - Cache-Control   # üëà th√™m c√°i n√†y
        - X-Requested-With
        - Accept
      credentials: true
      max_age: 3600

# ================== USER-SERVICE ==================
services:
  - name: user
    url: http://host.docker.internal:8081
    routes:
      # public: /api/auth/**
      - name: user-auth-public
        paths: [ "/api/auth" ]
        strip_path: false
      # public: /api/user/** (n·∫øu c√≥)
      - name: user-user-public
        paths: [ "/api/user" ]
        strip_path: false
      # protected: c√°c URL c√≤n l·∫°i d∆∞·ªõi /api/**
      - name: user-protected
        paths: [ "/api" ]
        strip_path: false
        plugins:
          - name: jwt
            config:
              key_claim_name: iss
              header_names: [ Authorization  ]
              uri_param_names: [ jwt ]
              claims_to_verify: [ exp ]
              run_on_preflight: false
              maximum_expiration: 0
              secret_is_base64: true

  # ================== EMAIL (c√≥ JWT) ==================
  - name: email
    url: http://host.docker.internal:8082
    routes:
      - name: email-route
        paths: [ "/api/email" ]
        strip_path: false
       

  # ================== PRODUCT (public) ==================
  - name: product
    url: http://host.docker.internal:8083
    routes:
      - name: product-route
        paths:
          - /api/product
          - /api/products
          - /api/product-variants
          - /api/wishlist
          - /api/reviews
        strip_path: false


  # ================== CART (JWT) ==================
  - name: cart
    url: http://host.docker.internal:8084
    routes:
      - name: cart-route
        paths: [ "/api/cart" ]
        strip_path: false
      
  # ================== SEARCH (public) ==================
  - name: search
    url: http://host.docker.internal:8085
    routes:
      - name: search-route
        paths: [ "/api/search" ]
        strip_path: false

  # ================== ORDER (JWT) ==================
  - name: order
    url: http://host.docker.internal:8086
    routes:
      - name: order-route
        paths:
          - /api/orders
          - /api/shippingMethods
        strip_path: false
     
  # ================== PAYMENT (JWT) ==================
  - name: payment
    url: http://host.docker.internal:8087
    routes:
      - name: payment-route
        paths: [ "/api/payment" ]
        strip_path: false
       

  # ================== RECOMMEND (JWT) ==================
  - name: recommend
    url: http://host.docker.internal:8088
    routes:
      - name: recommend-route
        paths:
          - /api/recommend
          - /api/search
        strip_path: false
      


  # ================== SELLER (JWT) ==================
  - name: seller
    url: http://host.docker.internal:8089
    routes:
    # Public routes (kh√¥ng c·∫ßn JWT)
    - name: seller-public-route
      paths:
        - /api/seller/registerSeller
        - /api/seller/verifyLoginSeller
        - /api/seller/checkLoginSeller
      strip_path: false

    # Protected routes (c·∫ßn JWT)
    - name: seller-protected-route
      paths:
        - /api/seller
      strip_path: false
      plugins:
        - name: jwt
          config:
            key_claim_name: iss
            header_names: [ Authorization  ]
            uri_param_names: [ jwt ]
            claims_to_verify: [ exp ]
            run_on_preflight: false
            maximum_expiration: 0
            secret_is_base64: true


  # ================== UPLOAD (JWT) ==================
  - name: upload
    url: http://host.docker.internal:8090
    routes:
      - name: upload-route
        paths: [ "/api/upload" ]
        strip_path: false
        plugins:
          - name: jwt
            config:
              key_claim_name: iss
              header_names: [ Authorization  ]
              uri_param_names: [ jwt ]
              claims_to_verify: [ exp ]
              run_on_preflight: false
              maximum_expiration: 0
              secret_is_base64: true

  # ================== ADMIN (JWT) ==================
  - name: admin
    url: http://host.docker.internal:8091
    routes:
      - name: admin-route
        paths: [ "/api/admin" ]
        strip_path: false
        plugins:
          - name: jwt
            config:
              key_claim_name: iss
              header_names: [ Authorization  ]
              uri_param_names: [ jwt ]
              claims_to_verify: [ exp ]
              run_on_preflight: false
              maximum_expiration: 0
              secret_is_base64: true
