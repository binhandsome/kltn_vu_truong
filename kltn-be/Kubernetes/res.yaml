

# =========================
# Redis
# =========================
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: default
spec:
  replicas: 1
  selector: { matchLabels: { app: redis } }
  template:
    metadata: { labels: { app: redis } }
    spec:
      containers:
        - name: redis
          image: redis:7
          ports: [ { containerPort: 6379 } ]
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: default
spec:
  type: ClusterIP
  selector: { app: redis }
  ports:
    - port: 6379
      targetPort: 6379
      protocol: TCP

# =========================
# Elasticsearch (single-node để test)
# =========================
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elasticsearch-pvc
  namespace: default
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 30Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: default
spec:
  serviceName: elasticsearch
  replicas: 1
  selector: { matchLabels: { app: elasticsearch } }
  template:
    metadata: { labels: { app: elasticsearch } }
    spec:
      containers:
        - name: es
          image: docker.elastic.co/elasticsearch/elasticsearch:8.11.4
          env:
            - { name: discovery.type, value: "single-node" }
            - { name: ES_JAVA_OPTS, value: "-Xms2g -Xmx2g" }
            - { name: xpack.security.enabled, value: "false" }   # ← Tắt security
          ports:
            - { containerPort: 9200 }
            - { containerPort: 9300 }
          volumeMounts:
            - { name: es-data, mountPath: /usr/share/elasticsearch/data }
      volumes:
        - name: es-data
          persistentVolumeClaim:
            claimName: elasticsearch-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: default
spec:
  type: ClusterIP
  selector: { app: elasticsearch }
  ports:
    - port: 9200
      targetPort: 9200
      protocol: TCP

# =========================
# Zipkin
# =========================
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zipkin-server
  namespace: default
spec:
  replicas: 1
  selector: { matchLabels: { app: zipkin-server } }
  template:
    metadata: { labels: { app: zipkin-server } }
    spec:
      containers:
        - name: zipkin
          image: openzipkin/zipkin:2.23
          ports: [ { containerPort: 9411 } ]
          resources:
            limits:
              memory: "300Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: zipkin-server
  namespace: default
spec:
  type: ClusterIP
  selector: { app: zipkin-server }
  ports:
    - port: 9411
      targetPort: 9411
      protocol: TCP
